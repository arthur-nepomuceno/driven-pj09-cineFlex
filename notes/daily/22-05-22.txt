======================================================================================
================================================================= 22/05/2022 - Domingo
Início: 16:04
========== || ====================== || ========== || ========== || ========== || =====
QQQ
13. A rota só pode mudar se a reserva estiver toda validada.
    - a mudança de rota também tem que depender da validação do pedido.
    COMO FAZER ISSO?
    POSSIBILIDADES:
    
    a) Adicionar uma variável de condição na renderização da rota;
        não está funcionando porque a renderização da rota continua acontecendo antes
        do submit do formulário, e eu preciso qu ela só aconteça depois.

    b) Usar um <Reditect to="" /> dentro do promise.then;
        -isso requer importar o Reditect do react-router-dom
        não achei o Redirect dentro da lib do react-router-dom.
        talvez não exista mais.

    c) Usar o useNavigate.
        -isso requer importar o useNavigate do react-router-dom
        -FUNCIONOU PERFEITAMENTE!
        depois de importar o useNavigate, preciso inicializar ele
        dentro de uma variável.
        DETALHE: se for dentro de uma funçao do componente, dá problema.
        tem que ser dentro do espaço de rotina do componente.
        depois é só chamar variavel("rota") dentro da parte lógica do
        componente e a navegação vai acontecer como uma etapa comum
        da rotina.

PAUSA AQUI - FIM DA SELEÇÃO DE ASSENTOS
Fim: 16:39
Total: 0:35
=======================================================================================
=======================================================================================
RETORNO - INÍCIO DA TELA DE SUCESSO
Início: 17:56
========== || ====================== || ========== || ========== || ========== || =====
01. Criar o layout conforme modelo. -OK
    - criar um componente genérico para cada tipo de dado exibido -ok
        - filme, ingresso e comprador -ok

02. Criar o botão que leva para home -OK
    -usar o useNavigate e disparar no onClick do botão. -ok

03. Exibir as informações dos pedidos corretamente.
    - MovieData.js precisa receber o nome, o horário e a data do filme
    - TicketData.js precisa receber o número dos ASSENTOS
    - BuyerData.js precisa receber o nome e cpf de cada comprador

PAUSA AQUI
Fim: 19:39
Total: 1:43
=======================================================================================
=======================================================================================
RETORNO
Início: 20:39
========== || ====================== || ========== || ========== || ========== || =====
QQQ
03. Exibir as informações dos pedidos corretamente. -OK
    - usar uma combinação de useNavigate com useLocation para transferir as informações
    da tela de seleção de assentos para a tela de sucesso
    - informações que eu preciso exibir na tela de sucesso:
        título do filme
        data do filme
        hora do filme
        numero dos assentos
        nome do comprador
        cpf do comprador

    A INFORMAÃO QUE FEZ A DIFERENÇA:
    - usar o useLocation combninado com o useNavigate para passar
    as informações de uma tela para outra.

FIM DO DIA
Fim: 23:25
Total: 2:46
=======================================================================================
